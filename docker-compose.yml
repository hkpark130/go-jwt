version: '3'
services:
# go-jwt-db
  db:
    container_name: go-jwt-db
    image: postgres:13.4
    environment: 
      - POSTGRES_PASSWORD=${DB_PW}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_DB=${DB_NAME}
    expose:
      - "5432"
    volumes: 
      - "./docker/data/:/docker-entrypoint-initdb.d/"
    networks:
      - go
# go-jwt-api
  golang:
    container_name: go-jwt-api
    build: .
    expose:
      - "3000"
    volumes:
      - ./:/go/src
    environment: 
      - POSTGRES_PASSWORD=${DB_PW}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_DB=${DB_NAME}
      - SECRET_KEY=${SECRET_KEY}
      - CONF_FILE=${CONF_FILE}
      - TEMPLATE_PATH=/go/src
    tty: true
    depends_on:
      - db
    networks:
      - go
# apache
  apache:
    container_name: go-jwt-web
    build: ./docker/apache/.
    ports:
      - 8300:80
    volumes:
      - ./static_server/:/var/www/html/
      - ./docker/apache/${CONF_FILE}:/usr/local/apache2/conf/include/${CONF_FILE}
      - ${FULLCHAIN:-/dev/null}:/var/www/html/fullchain.pem
      - ${PRIVKEY:-/dev/null}:/var/www/html/privkey.pem
    networks:
      - go
# go-doc
  # godoc:
  #   container_name: go-doc
  #   build: ./docker/godoc/.
  #   command: godoc -http=godoc:6060
  #   ports:
  #     - 6060:6060
  #   volumes:
  #     - ./:/go/src
  #   environment: 
  #     - POSTGRES_PASSWORD=${DB_PW}
  #     - POSTGRES_USER=${DB_USER}
  #     - POSTGRES_DB=${DB_NAME}
  #     - SECRET_KEY=${SECRET_KEY}
  #     - TEMPLATE_PATH=/go/src
  #   tty: true
  #   depends_on:
  #     - db
  #   networks:
  #     - go
# redis
  redis:
    container_name: go-redis
    image: redis:6.2
    expose:
      - "6379"
    volumes: 
      - "./docker/redis/data/:/docker-entrypoint-initdb.d/"
    networks:
      - go

networks:
  go:
    driver: bridge
    