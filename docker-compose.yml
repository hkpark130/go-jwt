version: '3'
services:
# go-jwt-db
  db:
    container_name: go-jwt-db
    image: postgres:13.4
    environment: 
      - POSTGRES_PASSWORD=${DB_PW}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_DB=${DB_NAME}
    volumes: 
      - "./docker/data/:/docker-entrypoint-initdb.d/"
    networks:
      - go
# go-jwt-api
  golang:
    container_name: go-jwt-api
    build: .
    ports:
      - 3000:3000
    volumes:
      - ./:/go/src
    environment: 
      - POSTGRES_PASSWORD=${DB_PW}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_DB=${DB_NAME}
      - SECRET_KEY=${SECRET_KEY}
      - TEMPLATE_PATH=/go/src
    tty: true
    depends_on:
      - db
    networks:
      - go
# apache
  apache:
    container_name: go-jwt-web
    build: ./docker/apache/.
    ports:
      - 80:80
    volumes:
      - ./static_server/:/var/www/html/
    networks:
      - go
# go-doc
  godoc:
    container_name: go-doc
    build: ./docker/godoc/.
    command: godoc -http=godoc:6060
    ports:
      - 6060:6060
    volumes:
      - ./:/go/src
    environment: 
      - POSTGRES_PASSWORD=${DB_PW}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_DB=${DB_NAME}
      - SECRET_KEY=${SECRET_KEY}
      - TEMPLATE_PATH=/go/src
    tty: true
    depends_on:
      - db
    networks:
      - go
# redis
  redis:
    container_name: redis
    image: redis:6.2
    ports:
      - 6379:6379
    environment: 
      - POSTGRES_PASSWORD=${DB_PW}
    volumes: 
      - "./docker/redis/data/:/docker-entrypoint-initdb.d/"
    networks:
      - go

networks:
  go:
    driver: bridge
